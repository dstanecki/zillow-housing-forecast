apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: app
    environment: {{ .Values.environment }}
  name: {{ if eq .Values.environment "prod" }}app-prod{{ else }}app-dev{{ end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      io.kompose.service: app
      environment: {{ .Values.environment }}
  template:
    metadata:
      labels:
        io.kompose.service: app
        environment: {{ .Values.environment }}
    spec:
      # Spread pods across nodes if running multiple replicas
      {{- if gt (int (default 1 .Values.replicaCount)) 1}}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: io.kompose.service
                      operator: In
                      values:
                        - app
                topologyKey: kubernetes.io/hostname      {{- end}}
      containers:
        - name: app
          image: "{{ .Values.appImage.repository }}:{{ .Values.appImage.tag }}"
          ports:
            - containerPort: 5000
              protocol: TCP
              name: webapp
          readinessProbe:
            httpGet:
              path: /ready
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: DB_HOST
              value: {{ if eq .Values.environment "prod" }}mariadb-prod{{ else }}mariadb-dev{{ end }}
            - name: DB_NAME
              value: ZillowHomeValueForecast
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: DB_PASSWORD
            - name: DB_USER
              value: root
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-redis
                  key: redis-password
            - name: REDIS_HOST
              value: my-redis-master.{{ .Release.Namespace }}.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: RECAPTCHA_SITE_KEY
              value: {{ if eq .Values.environment "prod" }}6LdrvnwrAAAAAAlefAt-1M5QhtBlyYCy0eOXDIZg{{ else }}6LdVv3wrAAAAAF9wVVlEZ0xZSu8C0C5gV236pzFL{{ end }}
            - name: RECAPTCHA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: recaptcha-secret-key
                  key: RECAPTCHA_SECRET_KEY
            - name: SUBSCRIPTION_KEY
              valueFrom:
                secretKeyRef: 
                  name: azure-ai-openapi-key
                  key: SUBSCRIPTION_KEY
      restartPolicy: Always

