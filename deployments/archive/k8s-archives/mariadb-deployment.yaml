apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mariadb
  name: {{ if eq .Values.environment "prod" }}mariadb-prod{{ else }}mariadb-dev{{ end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      io.kompose.service: mariadb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: mariadb
    spec:
      # Spread pods across nodes if running multiple replicas
      {{- if gt (int (default 1 .Values.replicaCount)) 1}}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: io.kompose.service
                      operator: In
                      values:
                        - mariadb
                topologyKey: kubernetes.io/hostname
      {{- end}}
      containers:
        - image: "{{ .Values.dbImage.repository }}:{{ .Values.dbImage.tag }}"
          name: mariadb
          ports:
            - containerPort: 3306
              protocol: TCP
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - /usr/local/bin/healthcheck.sh
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              cpu: "250m"
              memory: "128Mi"
            limits: 
              cpu: "500m"
              memory: "256Mi"
          env:
            - name: MYSQL_DATABASE
              value: ZillowHomeValueForecast
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: DB_PASSWORD
      restartPolicy: Always
