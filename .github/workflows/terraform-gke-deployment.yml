name: Terraform GKE Deployment

on:
  repository_dispatch:
    types: [trigger-fallback]
  workflow_dispatch: 

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }} 
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_azure_ai_openapi_key: ${{ secrets.AZURE_AI_OPENAPI_KEY }}
  TF_VAR_recaptcha_secret_key_prod: ${{ secrets.RECAPTCHA_SECRET_KEY_PROD }}
  TF_VAR_recaptcha_secret_key_dev: ${{ secrets.RECAPTCHA_SECRET_KEY_DEV }}
  TF_VAR_redis_password: ${{ secrets.REDIS_PASSWORD }}
  TF_VAR_cloudflare_api_token_secret: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  terraform:
    name: Deploy with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Cluster Terraform Init
        working-directory: terraform/cluster
        run: terraform init

      - name: Cluster Terraform Plan
        working-directory: terraform/cluster
        run: terraform plan

      - name: Cluster Terraform Apply
        working-directory: terraform/cluster
        run: terraform apply -auto-approve

      - name: Get Traefik IP
        id: traefik-ip
        working-directory: terraform/cluster
        run: |
          ip=$(terraform output -raw traefik_load_balancer_ip)
          echo "traefik_ip=$ip" >> $GITHUB_OUTPUT
          
      # APPLY WORKLOADS e.g. ArgoCD apps
      - name: Workloads Terraform Init
        working-directory: terraform/workloads
        run: terraform init

      - name: Workloads Terraform Plan
        working-directory: terraform/workloads
        run: terraform plan

      - name: Workloads Terraform Apply
        working-directory: terraform/workloads
        run: terraform apply -auto-approve
        
      - name: Update DNS record
        run: |
            ip="${{ steps.traefik-ip.outputs.traefik_ip }}"          
            curl -X PATCH "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$DNS_RECORD_ID" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"zhf.danielstanecki.com\",\"type\":\"A\",\"comment\":\"Domain verification record\",\"content\":\"$ip\",\"proxied\":true}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          DNS_RECORD_ID: ${{ secrets.DNS_RECORD_ID }}
