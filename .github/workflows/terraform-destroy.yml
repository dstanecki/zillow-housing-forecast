name: Terraform Destroy

on:
  workflow_dispatch:

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }} 
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_azure_ai_openapi_key: ${{ secrets.AZURE_AI_OPENAPI_KEY }}
  TF_VAR_recaptcha_secret_key_prod: ${{ secrets.RECAPTCHA_SECRET_KEY_PROD }}
  TF_VAR_recaptcha_secret_key_dev: ${{ secrets.RECAPTCHA_SECRET_KEY_DEV }}
  TF_VAR_redis_password: ${{ secrets.REDIS_PASSWORD }}
  USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

jobs:
  terraform:
    name: Destroy all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Destroy workloads
      - name: Terraform Init (workloads)
        working-directory: terraform/workloads
        run: terraform init

      - name: Terraform Destroy Workloads
        working-directory: terraform/workloads
        run: terraform destroy -auto-approve

      # Get region from terraform output
      - name: Terraform Init (cluster)
        working-directory: terraform/cluster
        run: terraform init

      - name: Extract region from Terraform
        working-directory: terraform/cluster
        id: tf_outputs
        run: |
          REGION=$(terraform output -raw region)
          echo "REGION=$REGION" >> $GITHUB_ENV

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      # Configure kubectl with dynamic region
      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials zhf-cluster \
            --region "$REGION" \
            --project "$TF_VAR_project_id"

      # Force delete stuck namespaces (finalizers)
      - name: Force delete stuck namespaces
        run: |
          for ns in dev prod; do
            kubectl get namespace $ns -o json 2>/dev/null | \
              jq 'del(.spec.finalizers)' | \
              kubectl replace --raw "/api/v1/namespaces/$ns/finalize" -f - || true
          done

      # Clean up CRDs and Terraform state
      - name: Clean up CRDs and namespace state
        working-directory: terraform/cluster
        run: |
          kubectl delete crd --all --ignore-not-found || true
          terraform state rm 'helm_release.cert_manager' || true
          terraform state rm 'helm_release.kube_prometheus_stack' || true
          terraform state rm 'helm_release.traefik' || true
          terraform state rm 'kubernetes_namespace.dev' || true
          terraform state rm 'kubernetes_namespace.prod' || true
          

      - name: Terraform Destroy Cluster
        working-directory: terraform/cluster
        run: terraform destroy -auto-approve
